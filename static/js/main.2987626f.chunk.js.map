{"version":3,"sources":["components/Header.js","components/TodoItem.js","components/TodoList.js","components/Footer.jsx","App.js","index.js"],"names":["Header","inputValue","handleChangeValue","submitNewTodo","className","onSubmit","value","placeholder","pattern","onChange","TodoItem","id","completed","title","onChangeCompletedInput","onChangeDeleteTodo","type","toString","onClick","onDoubleClick","console","log","TodoList","todos","htmlFor","map","key","Footer","itemsLeft","footerBtns","handleFooterBtnsFilter","handleFooterBtnDeleteCompleted","length","href","App","state","originTodos","event","setState","target","preventDefault","newTodo","uuid","prevState","idTodo","newTodos","filteredIndex","filter","todo","field","filteredTodo","this","JSON","parse","localStorage","getItem","setItem","stringify","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2987626f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = ({ inputValue, handleChangeValue, submitNewTodo }) => (\n  <header className=\"header\">\n    <h1>todos</h1>\n\n    <form onSubmit={submitNewTodo}>\n      <input\n        className=\"new-todo\"\n        value={inputValue}\n        placeholder=\"What needs to be done?\"\n        pattern=\"[^\\s]+\"\n        onChange={handleChangeValue}\n      />\n    </form>\n  </header>\n);\n\nHeader.propTypes = {\n  inputValue: PropTypes.string,\n  handleChangeValue: PropTypes.func,\n  submitNewTodo: PropTypes.func,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoItem = ({ id, completed, title,\n  onChangeCompletedInput, onChangeDeleteTodo }) => (\n  <li className={completed ? 'completed' : 'view'}>\n      <div className=\"view\">\n      <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          id={id}\n          completed={completed.toString()}\n          onClick={() => onChangeCompletedInput(id)}\n        />\n\n      <label onDoubleClick={() => console.log('double click')}>\n          {title}\n        </label>\n\n      <button\n          type=\"button\"\n          className=\"destroy\"\n          id={id}\n          onClick={() => onChangeDeleteTodo(id)}\n        />\n    </div>\n\n      <input type=\"text\" className=\"edit\" id={id} />\n\n    </li>\n);\n\nTodoItem.propTypes = {\n  todo: PropTypes.object,\n  onChangeCompletedInput: PropTypes.func,\n  onChangeDeleteTodo: PropTypes.func,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ todos, onChangeCompletedInput,\n  onChangeDeleteTodo }) => (\n  <section className=\"main\">\n      <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n      <ul className=\"todo-list\">\n\n      {todos.map(({ id, completed, title }) => (\n          <TodoItem\n          key={id}\n          completed={completed}\n          title={title}\n          id={id}\n          onChangeCompletedInput={onChangeCompletedInput}\n          onChangeDeleteTodo={onChangeDeleteTodo}\n        />\n      ))}\n\n      {/* <li className=\"editing\">\n            <div className=\"view\">\n              <input type=\"checkbox\" className=\"toggle\" id=\"todo-3\" />\n              <label htmlFor=\"todo-3\">zxcvbnm</label>\n              <button type=\"button\" className=\"destroy\" />\n            </div>\n            <input type=\"text\" className=\"edit\" />\n          </li> */}\n    </ul>\n    </section>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.array,\n  onChangeCompletedInput: PropTypes.func,\n  onChangeDeleteTodo: PropTypes.func,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Footer = ({ itemsLeft, footerBtns,\n  handleFooterBtnsFilter, handleFooterBtnDeleteCompleted }) => (\n\n  <footer className=\"footer\">\n\n      <span className=\"todo-count\">\n      {itemsLeft.length}\n      {' '}\n      {' '}\nitems left\n    </span>\n\n      <ul className=\"filters\">\n      <li>\n          <a\n          href=\"#/\"\n          className={footerBtns === 'all' ? 'selected' : ''}\n          onClick={() => handleFooterBtnsFilter('all')}\n        >\n          All\n        </a>\n        </li>\n\n      <li>\n          <a\n          href=\"#/active\"\n          className={footerBtns === 'active' ? 'selected' : ''}\n          onClick={() => handleFooterBtnsFilter('active')}\n        >\n          Active\n        </a>\n        </li>\n\n      <li>\n          <a\n          href=\"#/completed\"\n          className={footerBtns === 'completed' ? 'selected' : ''}\n          onClick={() => handleFooterBtnsFilter('completed')}\n        >\n          Completed\n        </a>\n        </li>\n    </ul>\n\n      <button\n      type=\"button\" className=\"clear-completed\"\n      onClick={handleFooterBtnDeleteCompleted}\n    >\n      Clear completed\n    </button>\n\n    </footer>\n\n);\n\nFooter.propTypes = {\n  itemsLeft: PropTypes.array,\n  footerBtns: PropTypes.string,\n  handleFooterBtnsFilter: PropTypes.func,\n};\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport uuid from 'react-uuid';\nimport Header from './components/Header';\nimport TodoList from './components/TodoList';\nimport Footer from './components/Footer';\n\nclass App extends Component {\n  state = {\n    todos: [],\n    originTodos: [],\n    inputValue: '',\n    completed: false,\n    footerBtns: 'all',\n  }\n\n  componentDidMount() {\n    this.setState({\n      todos: JSON.parse(localStorage.getItem('todos')),\n      originTodos: JSON.parse(localStorage.getItem('originTodos')),\n    });\n  }\n\n  componentDidUpdate() {\n    const { todos, originTodos } = this.state;\n\n    localStorage.setItem('todos', JSON.stringify(todos));\n    localStorage.setItem('originTodos', JSON.stringify(originTodos));\n  }\n\n  handleChangeValue = (event) => {\n    this.setState({\n      inputValue: event.target.value,\n    });\n  }\n\n  submitNewTodo = (event) => {\n    event.preventDefault();\n\n    const newTodo = {\n      id: uuid(),\n      title: this.state.inputValue,\n      completed: this.state.completed,\n    };\n\n    if (newTodo.title) {\n      this.setState(prevState => ({\n        todos: [...prevState.todos, newTodo],\n        originTodos: [...prevState.originTodos, newTodo],\n        inputValue: '',\n      }));\n    }\n  }\n\n  onChangeCompletedInput = (idTodo) => {\n    this.setState((prevState) => {\n      const newTodos = prevState.todos\n        .map(({ id, completed }) => {\n          if (id === idTodo) {\n            completed = !completed;\n          }\n\n          return id && completed;\n        });\n\n      return {\n        todos: newTodos,\n        originTodos: newTodos,\n      };\n    });\n  }\n\n  onChangeDeleteTodo = (id) => {\n    this.setState((prevState) => {\n      const filteredIndex = prevState.todos\n        .filter(todo => todo.id !== id);\n\n      return {\n        todos: filteredIndex,\n        originTodos: filteredIndex,\n      };\n    });\n  }\n\n  handleFooterBtnsFilter = (field) => {\n    switch (field) {\n      case 'completed':\n        this.setState(prevState => ({\n          todos: prevState.originTodos\n            .filter(todo => todo.completed),\n          footerBtns: 'completed',\n        }));\n        break;\n      case 'active':\n        this.setState(prevState => ({\n          todos: prevState.originTodos\n            .filter(todo => !todo.completed),\n          footerBtns: 'active',\n        }));\n        break;\n      default:\n      case 'all':\n        this.setState(prevState => ({\n          todos: [...prevState.originTodos],\n          footerBtns: 'all',\n        }));\n        break;\n    }\n  }\n\n  handleFooterBtnDeleteCompleted = () => {\n    this.setState((prevState) => {\n      const filteredTodo = prevState.originTodos\n        .filter(todo => !todo.completed);\n\n      return {\n        todos: filteredTodo,\n        originTodos: filteredTodo,\n      };\n    });\n  }\n\n  render() {\n    const { originTodos, todos, inputValue, completed, footerBtns } = this.state;\n    const itemsLeft = [...originTodos].filter(todo => !todo.completed);\n\n    return (\n      <section className=\"todoapp\">\n\n        <Header\n          todos={todos}\n          inputValue={inputValue}\n          handleChangeValue={this.handleChangeValue}\n          submitNewTodo={this.submitNewTodo}\n        />\n\n        <TodoList\n          todos={todos}\n          completed={completed}\n          onChangeCompletedInput={this.onChangeCompletedInput}\n          onChangeDeleteTodo={this.onChangeDeleteTodo}\n        />\n\n        <Footer\n          itemsLeft={itemsLeft}\n          footerBtns={footerBtns}\n          handleFooterBtnsFilter={this.handleFooterBtnsFilter}\n          handleFooterBtnDeleteCompleted={this.handleFooterBtnDeleteCompleted}\n        />\n\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}